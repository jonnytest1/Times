/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'Jonathan' at '05.06.18 18:12' with Gradle 3.0
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/3.0/userguide/tutorial_java_projects.html
 */
buildscript {
    dependencies {
	    repositories {
	    	mavenCentral()
        }
        classpath 'org.mariadb.jdbc:mariadb-java-client:1.1.7'
    }
}
apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'eclipse-wtp'
repositories {
    jcenter()
}
eclipse {
    wtp{ 
        facet {
            facet name: 'java', version: '1.8'
            facet name: 'jst.web', version: '3.1'
        }
    }
}
war{
 	exclude('**test**')
	destinationDir = file("/war")
	webInf {
		from 'src/main'
			into '/WEB-INF/classes'
    }
    webInf {
		from 'src/main/resources/META-INF/'
			into '/WEB-INF/classes/META-INF/'
    }
    from 'WebContent/META-INF'
    	into '/'
	
	//webXml = file('WebContent/WEB-INF/web.xml')

	outputs.upToDateWhen { false }
}
// In this section you declare the dependencies for your production and test code
dependencies {
    // https://mvnrepository.com/artifact/javax/javaee-api
	providedCompile group: 'javax', name: 'javaee-api', version: '7.0'
	
	// https://mvnrepository.com/artifact/org.mariadb.jdbc/mariadb-java-client
	providedCompile group: 'org.mariadb.jdbc', name: 'mariadb-java-client', version: '1.1.7'
	
	
    // https://mvnrepository.com/artifact/javax.ws.rs/javax.ws.rs-api
	compile group: 'javax.ws.rs', name: 'javax.ws.rs-api', version: '2.0.1'
    
	// https://mvnrepository.com/artifact/org.mariadb.jdbc/mariadb-java-client
	//compile group: 'org.mariadb.jdbc', name: 'mariadb-java-client', version: '1.1.7'
	//compile 'org.mariadb.jdbc:mariadb-java-client:2.1.2'
	
	// https://mvnrepository.com/artifact/org.hibernate/hibernate-validator
	//compile group: 'org.hibernate', name: 'hibernate-validator', version: '4.2.0.Final'
	// https://mvnrepository.com/artifact/org.hibernate/hibernate-entitymanager
   // compile group: 'org.hibernate', name: 'hibernate-entitymanager', version: '5.3.1.Final'
	
	// https://mvnrepository.com/artifact/org.hibernate/hibernate-core
	compile('org.hibernate:hibernate-core:5.3.1.Final'){
	   exclude group: 'dom4j' ,module: 'dom4j'
	}

	 //group: 'org.hibernate', name: 'hibernate-core', version: '5.3.1.Final'
	
	
    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.21'
    testCompile 'junit:junit:4.12'
}

task copyToWildfly(type: Copy){
	from '/war'
    into 'D:/dprogramme/wildfly/jboss-eap-7.1/standalone/deployments'
    outputs.upToDateWhen { false }
}

task copyConfigToWildfly(type: Copy){
	from '/deployment/standalone/'
    into 'D:/dprogramme/wildfly/jboss-eap-7.1/standalone/configuration/'
    rename ('standalone-full.xml', 'standalone.xml')
    outputs.upToDateWhen { false }
}
task copyModules(type: Copy){
	from '/deployment/modules/'
    into 'D:/dprogramme/wildfly/jboss-eap-7.1/modules'
    outputs.upToDateWhen { false }
}

war.dependsOn(copyConfigToWildfly);
war.finalizedBy(copyToWildfly);
copyToWildfly.finalizedBy(copyModules)
